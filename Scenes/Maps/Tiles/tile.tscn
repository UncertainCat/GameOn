[gd_scene load_steps=4 format=3 uid="uid://bl2i8ie5c5w1e"]

[ext_resource type="Texture2D" uid="uid://j3logr022v4" path="res://Assets/Graphics/yellow_iso_square.png" id="1_1luad"]
[ext_resource type="Texture2D" uid="uid://bw08fa37slf31" path="res://Assets/Graphics/red_iso_square.png" id="2_iquln"]

[sub_resource type="GDScript" id="GDScript_7q4ym"]
script/source = "extends Sprite2D

@export var normal_texture: Texture2D
@export var impassable_texture: Texture2D
@export var fade_duration: float = .1  # Default fade duration in seconds

var is_impassable = false
var fade_tween: Tween

func _ready():
	set_opacity(0.0)
	set_normal()

func set_impassable():
	texture = impassable_texture
	is_impassable = true

func set_normal():
	texture = normal_texture
	is_impassable = false

func set_opacity(opacity: float):
	print(opacity)
	modulate.a = opacity

func fade_out():
	if fade_tween and fade_tween.is_running():
		fade_tween.kill()
	fade_tween = create_tween()
	fade_tween.tween_property(self, \"modulate:a\", 0.0, fade_duration).set_trans(Tween.TRANS_LINEAR).set_ease(Tween.EASE_IN)

func snap_in(opacity: float):
	if fade_tween and fade_tween.is_running():
		# Fetch the current opacity value
		var current_opacity = modulate.a
		# Only kill the tween if the current opacity is lower than the desired opacity
		if current_opacity < opacity:
			fade_tween.kill()
			fade_tween = null
	if modulate.a < opacity:
		set_opacity(opacity)
"

[node name="Tile" type="Sprite2D"]
script = SubResource("GDScript_7q4ym")
normal_texture = ExtResource("1_1luad")
impassable_texture = ExtResource("2_iquln")
